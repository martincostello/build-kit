<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--
  Copyright (c) Martin Costello, 2025. All rights reserved.
  Licensed under the Apache 2.0 license. See the LICENSE file in the project root for full license information.
-->
<Project>
  <!-- Automatically include PDB files in NuGet packages, if present and use .snupkg symbols -->
  <PropertyGroup>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <SymbolPackageFormat>$([MSBuild]::ValueOrDefault('$(SymbolPackageFormat)', 'snupkg'))</SymbolPackageFormat>
  </PropertyGroup>
  <!-- Set default profile that owns the NuGet packages -->
  <PropertyGroup>
    <Authors>$([MSBuild]::ValueOrDefault('$(Authors)', 'martin_costello'))</Authors>
  </PropertyGroup>
  <!-- Default to Apache 2.0 license for NuGet packages -->
  <PropertyGroup>
    <PackageLicenseExpression>$([MSBuild]::ValueOrDefault('$(PackageLicenseExpression)', 'Apache-2.0'))</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>$([MSBuild]::ValueOrDefault('$(PackageRequireLicenseAcceptance)', 'false'))</PackageRequireLicenseAcceptance>
  </PropertyGroup>
  <!-- Apply default icon and README file names -->
  <PropertyGroup>
    <PackageIcon>$([MSBuild]::ValueOrDefault('$(PackageIcon)', 'package-icon.png'))</PackageIcon>
    <PackageReadmeFile>$([MSBuild]::ValueOrDefault('$(PackageReadmeFile)', 'package-readme.md'))</PackageReadmeFile>
  </PropertyGroup>
  <!-- Automatically mark NuGet packages as native AoT compatible -->
  <PropertyGroup Condition="$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net8.0'))">
    <IsAotCompatible>$([MSBuild]::ValueOrDefault('$(IsAotCompatible)', 'true'))</IsAotCompatible>
  </PropertyGroup>
  <!-- Set default package metadata when publishing from GitHub Actions -->
  <PropertyGroup Condition=" '$(IsGitHubActions)' == 'true' ">
    <PackageProjectUrl>$([MSBuild]::ValueOrDefault('$(PackageProjectUrl)', '$(GitHubRepositoryUrl)'))</PackageProjectUrl>
    <PackageReleaseNotes Condition=" '$(GitHubTag)' == '' ">$([MSBuild]::ValueOrDefault('$(PackageReleaseNotes)', 'See $(PackageProjectUrl)/releases for details.'))</PackageReleaseNotes>
    <PackageReleaseNotes Condition=" '$(GitHubTag)' != '' ">$([MSBuild]::ValueOrDefault('$(PackageReleaseNotes)', 'See $(PackageProjectUrl)/releases/tag/$(GitHubTag) for details.'))</PackageReleaseNotes>
  </PropertyGroup>
  <!-- Ignore NuGet warnings about using preview packages for the dotnet-vnext and dotnet-nightly branches -->
  <PropertyGroup>
    <GenerateNuspecDependsOn>$(GenerateNuspecDependsOn);_TryIgnoreNuGetPreviewPackageWarnings</GenerateNuspecDependsOn>
  </PropertyGroup>
  <Target Name="_TryIgnoreNuGetPreviewPackageWarnings" BeforeTargets="GenerateNuspec">
    <PropertyGroup>
      <_GitBranch>$([MSBuild]::ValueOrDefault('$(GITHUB_HEAD_REF)', '$(GITHUB_REF_NAME)'))</_GitBranch>
    </PropertyGroup>
    <Exec Command="git rev-parse --abbrev-ref HEAD" ConsoleToMSBuild="true" StandardOutputImportance="low" IgnoreExitCode="true" Condition=" '$(_GitBranch)' == '' ">
      <Output TaskParameter="ConsoleOutput" PropertyName="_GitBranch" />
    </Exec>
    <CreateProperty Value="$(NoWarn);NU5104" Condition=" ('$(_GitBranch)' == 'dotnet-vnext') OR ('$(_GitBranch)' == 'dotnet-nightly') ">
      <Output TaskParameter="Value" PropertyName="NoWarn" />
    </CreateProperty>
  </Target>
</Project>
