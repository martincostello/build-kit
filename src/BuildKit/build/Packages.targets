<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--
  Copyright (c) Martin Costello, 2025. All rights reserved.
  Licensed under the Apache 2.0 license. See the LICENSE file in the project root for full license information.
-->
<Project>
  <!-- Default to use the Package's ID as the title -->
  <PropertyGroup>
    <Title>$([MSBuild]::ValueOrDefault('$(Title)', '$(PackageId)'))</Title>
  </PropertyGroup>
  <!-- Attempt to find default files for NuGet package icon and README -->
  <PropertyGroup>
    <_PackageIconFullPath>$(ProjectDir)\$(PackageIcon)</_PackageIconFullPath>
    <_PackageIconFullPath Condition="!Exists('$(_PackageIconFullPath)')">$([System.IO.Path]::Combine($(ProjectDir), '..', '$(PackageIcon)'))</_PackageIconFullPath>
    <_PackageIconFullPath Condition="!Exists('$(_PackageIconFullPath)')">$([System.IO.Path]::Combine($(ProjectDir), '..', '..', '$(PackageIcon)'))</_PackageIconFullPath>
    <_PackageReadmeFullPath>$(ProjectDir)\$(PackageReadmeFile)</_PackageReadmeFullPath>
    <_PackageReadmeFullPath Condition="!Exists('$(_PackageReadmeFullPath)')">$([System.IO.Path]::Combine($(ProjectDir), '..', '$(PackageReadmeFile)'))</_PackageReadmeFullPath>
    <_PackageReadmeFullPath Condition="!Exists('$(_PackageReadmeFullPath)')">$([System.IO.Path]::Combine($(ProjectDir), '..', '..', '$(PackageReadmeFile)'))</_PackageReadmeFullPath>
  </PropertyGroup>
  <ItemGroup>
    <None Condition="Exists('$(_PackageIconFullPath)')" Include="$(_PackageIconFullPath)" Pack="True" PackagePath="" />
    <None Condition="Exists('$(_PackageReadmeFullPath)')" Include="$(_PackageReadmeFullPath)" Pack="True" PackagePath="" />
  </ItemGroup>
  <!-- Automatically configure baselines files for Public API analyzers -->
  <ItemGroup Condition="@(PackageReference-&gt;AnyHaveMetadataValue(`Identity`, `Microsoft.CodeAnalysis.PublicApiAnalyzers`))">
    <AdditionalFiles Include="PublicAPI\PublicAPI.Shipped.txt" />
    <AdditionalFiles Include="PublicAPI\PublicAPI.Unshipped.txt" />
  </ItemGroup>
  <ItemGroup Condition="@(PackageReference-&gt;AnyHaveMetadataValue(`Identity`, `Microsoft.CodeAnalysis.PublicApiAnalyzers`)) AND Exists('PublicAPI\$(TargetFramework)')">
    <AdditionalFiles Include="PublicAPI\$(TargetFramework)\PublicAPI.Shipped.txt" />
    <AdditionalFiles Include="PublicAPI\$(TargetFramework)\PublicAPI.Unshipped.txt" />
  </ItemGroup>
  <PropertyGroup>
    <_TargetFrameworkIdentifier>$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)'))</_TargetFrameworkIdentifier>
  </PropertyGroup>
  <ItemGroup Condition="@(PackageReference-&gt;AnyHaveMetadataValue(`Identity`, `Microsoft.CodeAnalysis.PublicApiAnalyzers`)) AND Exists('PublicAPI\$(_TargetFrameworkIdentifier)')">
    <AdditionalFiles Include="PublicAPI\$(_TargetFrameworkIdentifier)\PublicAPI.Shipped.txt" />
    <AdditionalFiles Include="PublicAPI\$(_TargetFrameworkIdentifier)\PublicAPI.Unshipped.txt" />
  </ItemGroup>
  <!-- Set GitHub Actions step outputs for easy re-use elsewhere in a GitHub Actions workflow -->
  <Target Name="SetNuGetPackageOutputs" AfterTargets="Pack" Condition=" '$(GITHUB_OUTPUT)' != '' ">
    <PropertyGroup>
      <_PackageNamesPath>$([System.IO.Path]::Combine('$(ArtifactsPath)', 'package-names.txt'))</_PackageNamesPath>
    </PropertyGroup>
    <ReadLinesFromFile File="$(_PackageNamesPath)">
      <Output TaskParameter="Lines" ItemName="_PackageNames" />
    </ReadLinesFromFile>
    <ItemGroup>
      <_PackageNames Include="$(PackageId)" />
    </ItemGroup>
    <RemoveDuplicates Inputs="@(_PackageNames)">
      <Output TaskParameter="Filtered" ItemName="_UniquePackageNames" />
    </RemoveDuplicates>
    <PropertyGroup>
      <_UniquePackageNames>@(_UniquePackageNames->'%(Identity)', ',')</_UniquePackageNames>
    </PropertyGroup>
    <WriteLinesToFile File="$(_PackageNamesPath)" Lines="@(_UniquePackageNames)" Overwrite="true" WriteOnlyWhenDifferent="true" />
    <WriteLinesToFile File="$(GITHUB_OUTPUT)" Lines="package-names=$(_UniquePackageNames)" />
    <WriteLinesToFile File="$(GITHUB_OUTPUT)" Lines="package-version=$(Version)" />
  </Target>
</Project>
